openapi: 3.0.0
info:
  title: User API
  description: API documentation for user routes
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /api/users/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: object
                  properties:
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: password123
              required:
                - fullName
                - username
                - email
                - password
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 60d0fe4f5311236168a109ca
                      fullName:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: John
                          lastName:
                            type: string
                            example: Doe
                      username:
                        type: string
                        example: johndoe
                      email:
                        type: string
                        example: johndoe@example.com
                      creditPoints:
                        type: number
                        example: 0
                      profileImage:
                        type: string
                        example: null
                      userLevel:
                        type: number
                        example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: 2021-06-22T19:44:15.000Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2021-06-22T19:44:15.000Z

        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: First name must be at least 2 characters long
                        param:
                          type: string
                          example: fullName.firstName
                        location:
                          type: string
                          example: body
        "409":
          description: Username or email already exists
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      error:
                        type: string
                        example: Username already exists
                  - type: object
                    properties:
                      error:
                        type: string
                        example: Email already exists
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/login:
    post:
      summary: Login a user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: password123
              required:
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 60d0fe4f5311236168a109ca
                      fullName:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: John
                          lastName:
                            type: string
                            example: Doe
                      username:
                        type: string
                        example: johndoe
                      email:
                        type: string
                        example: johndoe@example.com
                      creditPoints:
                        type: number
                        example: 0
                      profileImage:
                        type: string
                        example: null
                      userLevel:
                        type: number
                        example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: 2021-06-22T19:44:15.000Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2021-06-22T19:44:15.000Z
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

        "401":
          description: Invalid username or email and password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Credentials
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/profile:
    get:
      summary: Get user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 60d0fe4f5311236168a109ca
                      fullName:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: John
                          lastName:
                            type: string
                            example: Doe
                      username:
                        type: string
                        example: johndoe
                      email:
                        type: string
                        example: johndoe@example.com
                      creditPoints:
                        type: number
                        example: 0
                      profileImage:
                        type: string
                        example: null
                      userLevel:
                        type: number
                        example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: 2021-06-22T19:44:15.000Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2021-06-22T19:44:15.000Z
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        
  /api/users/logout:
    get:
      summary: Logout user
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/reset-password:
    post:
      summary: Reset password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
              required:
                - email
      responses:
        "200":
          description: Password reset link sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset link sent successfully
        "400":
          description: Email is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email is required
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/verify-email:
    post:
      summary: Verify email
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
              required:
                - email
      responses:
        "200":
          description: Email verification link sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verification link sent successfully
        "400":
          description: Email is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email is required
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/verify-otp/email:
    post:
      summary: Verify OTP for email verification
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                otp:
                  type: string
                  example: 123456
              required:
                - email
                - otp
      responses:
        "200":
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verified successfully
        "400":
          description: All fields are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: All fields are required
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/verify-otp/password:
    post:
      summary: Verify OTP for password reset
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                otp:
                  type: string
                  example: 123456
              required:
                - email
                - otp
      responses:
        "200":
          description: OTP verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OTP verified successfully
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "400":
          description: All fields are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: All fields are required
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error

  /api/users/change-password:
    patch:
      summary: Change password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                newPassword:
                  type: string
                  example: newpassword123
              required:
                - token
                - newPassword 

      responses:
        "200":
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password changed successfully
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: Password must be at least 6 characters long
                        param:
                          type: string
                          example: newPassword
                        location:
                          type: string
                          example: body
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
